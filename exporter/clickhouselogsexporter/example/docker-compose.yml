version: "3"

networks:
  otel-clickhouse:

services:
  otel-collector:
    build:
      context: ../../../local
      dockerfile: ../exporter/clickhouseexporter/example/Dockerfile
    # Uncomment the next line to use a preexisting image
    # image: otelcontribcol:latest
    container_name: otel
    command:
      - "--config=/etc/otel-collector-config.yml"
      - "--set=service.telemetry.logs.level=DEBUG"
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "13133:13133" # health_check extension
      - "55679:55679" # zpages extension
      - "24224:24224" # fluentforwarder
      - "24224:24224/udp" # fluentforwarder
    depends_on:
      - clickhouse
    networks:
      - otel-clickhouse

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    ports:
      - "9000:9000"
      - "8123:8123"
    networks:
      - otel-clickhouse

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./grafana.ini:/etc/grafana/grafana.ini
      - ./datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
    environment:
      GF_INSTALL_PLUGINS: grafana-clickhouse-datasource,vertamedia-clickhouse-datasource
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: vertamedia-clickhouse-datasource
    ports:
      - "3000:3000"
    networks:
      - otel-clickhouse

  # Log generator
  flog:
    image: mingrammer/flog:0.4.3
    # Output fake log in JSON format
    command: [ "--format=json", "--loop", "--delay=0.0001ms"]
    networks:
      - otel-clickhouse
    depends_on:
      - otel-collector
    logging:
      driver: fluentd
      options:
        mode: non-blocking
        # Allow time for otel-collector to spin up, then forward fluentd logs to the fluentforwarder receiver.
        fluentd-async-connect: "true"
        # Use nanosecond precision
        fluentd-sub-second-precision: "true"
    stop_signal: SIGKILL